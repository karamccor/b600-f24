{
  "hash": "bdfea99b699580ca12aa373c95df2cf9",
  "result": {
    "markdown": "---\ntitle: \"Lab 01\"\nsubtitle: \"BIOS 600 - Fall 2024\"\nlogo: \"images/logo_600.png\"\neditor: visual\nformat: html\n---\n\n\nDue Friday, Aug 23 at 11:59pm.\n\n# Welcome\n\n## Meet the TA\n\n![](images/lab-1/hello-sticker.jpeg){width=\"300\"}\n\n## Overview\n\n-   Today's lab introduces the computing tools we will be using this semester.\n\n-   We will begin by installing R and RStudio, and familiarizing ourselves with its basic functionality.\n\n-   We will also introduce R Markdown as a tool to create high-quality reproducible reports - don't worry, a fillable template is provided.\n\n**This is an individual lab. Your TAs will guide you through the first portion of the lab (until the \"On your own\" section).**\n\n## Installation\n\nR is a statistical programming language used for computation, data analysis, and graphics generation. It is widely used by statisticians, data scientists, and applied researchers in many fields.\n\n### Benefits of R\n\n-   flexible and freely available to the public, who have in turn written many user-contributed **packages** which provide additional functionality.\n\n-   RStudio is a convenient interface for R that adds convenient features, such as exporting output in nice formats.\n\n-   In this class, we'll be doing all of our computation in RStudio.\n\nLet's begin by installing R and RStudio. First, we need to install R, which can be [downloaded here](https://cran.r-project.org/) (see screenshot below).\n\n![](images/lab-1/r1.png)\n\nNext, install RStudio Desktop, which can be [downloaded here](https://posit.co/download/rstudio-desktop/) (see screenshot below).\n\n![](images/lab-1/r2.png)\n\n## First Steps in RStudio\n\nWith R and RStudio installed, we'll begin by exploring RStudio: the interface, reading in data, and basic commands. Upon opening RStudio, you should see something similar to the window below:\n\n![](images/lab-1/r3.png)\n\nThe **console** is the panel on the left side, and is where users can type commands and see immediate output. Let's try it out! Type the following code into the console:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n3 + 5\n```\n:::\n\n\nYou should get output that looks like\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n[1] 8\n```\n:::\n:::\n\n\n(For now, ignore the `[1]`). By typing in `3+5`, we got the expected answer, `8`. We can see that R can be used as a calculator directly in the console. Try some other commands that use R as a calculator. For instance, `3*25`, `exp(2)`, or `(10+5^2)/sqrt(40)`. Of course, R is not simply a calculator; other commands may also be entered here.\n\nTo illustrate, let's load a dataset. Enter the following command into the console (you can directly copy/paste it, but make sure everything is exactly as below):\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncdc <- read.csv(\"https://karamccor.github.io/b600-f24/labs/data/cdc_cleaned.csv\")\n```\n:::\n\n\nWe've just loaded a dataset named `cdc`. These data come primarily from the Sortable Risk Factors and Health Indicators dataset from the CDC, which comprises demographic and health indices compiled from various federal sources. This dataset is now part of our **environment**, which is displayed on the top half and right side of the RStudio window.\n\n-   The environment contains all objects in the current working space. These objects could be variables, lists of variables, or even entire datasets.\n\n-   In the same location as the environment tab, the \\*\\*history tab displays all commands used during the current session (don't worry about the connections tab for now).\n\n-   Finally, the bottom half of the right-hand panel shows information regarding files on your hard drive, installed packages, output such as plots, and help files or other documents.\n\nComing back to the dataset we loaded in, we can see that it is named `cdc`. We can take a look at this dataset in a spreadsheet-like window by clicking on `cdc` in the Environment tab to the right, or by running the following code **in the console**:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nView(cdc)\n```\n:::\n\n\nNote that other objects may be added to the environment, either from external data sources from the internet as in today’s example, datasets downloaded to your computer, or even as created as manipulations of existing datasets.\n\n## R Markdown and reproducible research\n\nR Markdown is a system that may be used to create easy-to-write, attractive reports, presentations, or webpages that also serve as reproducible records of the data analysis. These reports have the desirable property of being able to not only display written narratives and figures, but also include any R code and the outputs from these code snippets.\n\nOne of the biggest strengths of R Markdown is that everything is in one place, and that other users should be able to reproduce your results exactly, if they have your R Markdown document and datasets - the analysis is run from the beginning each time you render the document. As well, formatting is easy! Luckily, RStudio already comes with R Markdown support, so there is nothing additional to install.\n\nEvery homework assignment and lab in this class will be written in R Markdown, with a template provided for you to use. This lab's template can be downloaded by typing in the following code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndownload.file(\"https://karamccor.github.io/b600-f24/labs/lab-01-template.Rmd\", destfile=\"lab-01.Rmd\")\n```\n:::\n\n\nYou should now see the new file `lab-01.qmd` under the Files tab in the bottom-right hand side of your RStudio window. Click on `lab-01.qmd` in this window in order to open it up – it is the template for use in this lab!\n\nFirst, put your name in the space at the top where it says \"YOUR NAME GOES HERE\".\n\nFill in answers in the spaces provided: text narrative should be typed directly in the document and any included R code should be typed inside “chunks,” or sections defined by three backticks (the little mark on the same key as the tilde). See the template for more instructions, or ask your TA.\n\nAn important thing to note is that the workspace of the Quarto document is separate from the console – this means that you must load any packages inside of R chunks if you want to use functions contained in them. In the template for this lab, this has been done already, but in the future you may have to do it yourself.\n\nIn order to turn this template into a shareable document, **Render** the quarto template into an HTML document by pressing the Render button at the top of the document (it is a large blue arrow facing the right). You should see the template rendered as an .html file!\n\n## The tidyverse\n\n-   As mentioned previously, one of the biggest strengths of R is its large userbase who have contributed user-written functions to R via packages. R packages are “add-ons” to the basic functions available in R (think of them as apps on a phone).\n\n-   The `tidyverse` is a collection of packages designed around a common grammar and data structure. Some packages in the tidyverse that we will be using throughout this semester will be `ggplot2`, used for creating graphics and figures, and `dplyr` and `tidyr`, used for data manipulation and wrangling.\n\nFirst, install the `tidyverse` package by running the following code in your R Studio console:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"tidyverse\")\n```\n:::\n\n\nAfter installing the `tidyverse` package, you never have to install it again – all that is needed to use functions from the tidyverse is to load the package once per R session using the following code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n\nRemember that the console and the R Markdown document have different workspaces. If you load the tidyverse package in your console, it won’t be loaded into the workspace for the Quarto document. In the lab template, code for loading the tidyverse has already been provided. However, note that you must have the package installed first.\n\n## Basic Data Manipulation\n\n### Exercise 1\n\nFirst, let’s take a `glimpse` of the dataset by running the following code **in the console**:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(cdc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 50\nColumns: 17\n$ X                   <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,…\n$ State               <chr> \"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"Calif…\n$ Region              <chr> \"South\", \"West\", \"West\", \"South\", \"West\", \"West\", …\n$ HDI                 <chr> \"Bottom ten\", \"Middle\", \"Middle\", \"Bottom ten\", \"M…\n$ InfantMortalityRate <dbl> 8.7, 6.7, 6.1, 7.5, 4.3, 4.8, 4.8, 6.7, 6.1, 7.5, …\n$ CVDeathRate         <dbl> 229.7, 154.1, 138.8, 223.2, 145.6, 128.4, 147.8, 1…\n$ DrugDeathRate       <dbl> 15.7, 16.0, 19.0, 13.8, 11.3, 15.4, 22.1, 22.0, 16…\n$ MotorDeathRate      <dbl> 17.5, 8.8, 13.1, 17.8, 8.1, 10.0, 7.4, 13.3, 14.5,…\n$ CancerDeathRate     <dbl> 175.6, 159.8, 141.3, 185.4, 142.8, 134.4, 146.2, 1…\n$ Obesity             <dbl> 35.7, 31.4, 29.0, 35.7, 25.0, 22.3, 26.0, 30.7, 27…\n$ Smoking             <dbl> 21.5, 19.0, 14.7, 23.6, 11.0, 15.6, 13.4, 17.7, 15…\n$ Exercise            <dbl> 45.4, 55.3, 51.9, 41.2, 56.3, 60.4, 50.9, 49.7, 50…\n$ Seatbelt            <dbl> 95.7, 88.4, 87.2, 74.4, 97.1, 82.4, 85.1, 91.9, 88…\n$ FluVaccination      <dbl> 43.9, 39.1, 41.8, 46.2, 48.0, 49.9, 52.7, 51.2, 43…\n$ ChildVaccination    <dbl> 70.6, 66.3, 72.3, 66.6, 75.0, 75.4, 80.6, 79.3, 66…\n$ Under18             <dbl> 22.8, 25.3, 24.1, 23.8, 23.6, 23.3, 21.6, 21.8, 20…\n$ Over65              <dbl> 15.3, 9.4, 15.9, 15.7, 12.9, 12.7, 15.5, 16.4, 19.…\n```\n:::\n:::\n\n\nEach row is an *observation* and each column is a *variable*. How many rows and columns does the cdc dataset have? What does each row (observation) represent?\n\n## Physical activity and adult obesity\n\nToday we will be making some basic visualizations using the `ggplot` package in the tidyverse.\n\nIn this section we’ll work through a visualization example using the cdc dataset. The variables in this dataset are as follows:\n\n       \n- `State`, the name of the state\n- `Region`, the US Census region that each state belongs to\n- `HDI`, the Human Development Index of each state in 2017, categorized into whether they are among the top ten, the bottom ten, or the middle\n\n- `InfantMortalityRate`: infant mortality rate per 100,000\n- `CVDeathRate`: death rate per 100,000 due to cardiovasulcar causes\n- `DrugDeathRate`: death rate per 100,000 due to drug-related causes (ODs, etc.)\n- `MotorDeathRate`: death rate per 100,000 due to motor vehicle-related causes\n- `CancerDeathRate`: death rate per 100,000 due to cancer\n- `Obesity`: % of adults who are obese\n- `Smoking`: % of adults who smoked at least one cigarette in the past month\n- `Exercise`: % of adults who participated in at least 2.5 hours of aerobic activity per week\n- `Seatbelt`: % of adults to regularly wear their seat belt\n- `FluVaccination`: % of adults who received a flu vaccine\n- `ChildVaccination`: % of children who aged 19-35 months who have received the DTaP, polio, MMR, Hib, hepatitis B, varicella and PCV vaccines\n- `Under18`: % of residents under age 18\n- `Over65`: % of residents over age 65\n\n\nLet’s begin with a very simple plot. Run the following code **in the console**:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = cdc, mapping = aes(x = Exercise, y = Obesity)) + \n  geom_point()\n```\n:::\n\n\nWe just created our first plot in R! Let’s break down what each of these components is. `ggplot()` is the function that tells R to make a plot. We are plotting data from the `cdc` dataset, with `Exercise` on the x-axis and `Obesity` on the y-axis. Adding (`+`) the `geom_point()` in a new layer (separated on a new line for clarity) tells R specifically to create a scatterplot.\n\nDoes there appear to be a relationship between the percentage of adults in a state who participate in at least 2.5 hours of aerobic exercise a week and the percentage of adults in that state who are obese? If so, what is this relationship?\n\nNow run the following code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = cdc, mapping = aes(x = Exercise,y = Obesity,color = HDI, shape = HDI)) + \n  geom_point()\n```\n:::\n\n\nHow does this code differ from the previous snippet? What changes in the scatterplot does this change correspond to?\n\nFinally, run the following code, which should result in the plot below. Pay attention to how we’ve added new layers onto our base plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = cdc, mapping = aes(x = Exercise, y = Obesity, color = HDI, size = CVDeathRate)) + \n  geom_point() +\n  labs(title = \"Aerobic Activity vs. Obesity by State HDI\", \n       subtitle = \"Faceted by Region\", \n       x = \"Adequate aerobic activity (%)\", y = \"Obesity (%)\") + \n  facet_grid(.~Region) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](lab-1_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nAgain, how does this code differ from the previous plot, and what changes in the plot itself correspond to the additional code?\n\n## Exercise 1\n\nHow does the HDI of a state relate to the percentage of residents in each state who get 2.5 hours of aerobic activity and who are obese?\n\n# Example Graphs\n\nThis section contains the code used to produce the basic graphs in the course slides. Take a moment to examine the similarities and differences between the code examples provided. \n\n- What is your guess for what each line of code does, given the graphs? \n- What is the aesthetic mapping for each plot? \n- What geometries are being plotted?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = cdc, mapping = aes(x = Region)) + \n  geom_bar(fill = \"steelblue\") + \n  labs(title = \"Number of US States by Census Region\", \n       x = \"Region\", y = \"Count\")\n```\n\n::: {.cell-output-display}\n![](lab-1_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = cdc, aes(x = HDI, y = Obesity)) + geom_boxplot()+ \n  labs(title = \"Adult Obesity (%) by State HDI\", \n       x = \"HDI\", y = \"Adult Obesity (%)\")\n```\n\n::: {.cell-output-display}\n![](lab-1_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = cdc, aes(x = Obesity)) +\n  geom_histogram(color = \"darkblue\", fill = \"lightblue\", binwidth = 2)+ \n  labs(title = \"Distribution of Adult Obesity (%) by State\", \n       x = \"Adult Obesity (%)\", y = \"Count\")\n```\n\n::: {.cell-output-display}\n![](lab-1_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = cdc[1:4,], aes(x = State, y = Obesity, group = 1)) +\n  geom_line() + \n  geom_point() + \n  labs(title = \"Obesity by State\", \n       x = \"State\", y = \"Adult Obesity (%)\")\n```\n\n::: {.cell-output-display}\n![](lab-1_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = cdc, mapping = aes(x = Exercise, y = Obesity, color = HDI)) + \n  geom_point() +\n  labs(title = \"Aerobic Activity vs. Obesity by State HDI\", \n       x = \"Adequate aerobic activity (%)\", y = \"Obesity (%)\")\n```\n\n::: {.cell-output-display}\n![](lab-1_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n# Your turn!\n\nIn each of the following plots, make sure you have good plot titles and axis labels. Try your best to come up with “active” titles: part of your grade will be based on these considerations!\n\n## Exercise 2\n\nModify the code used for the bar graph that counts the number of US States by Census Region such that the bars are colored pink.\n\n## Exercise 3\n\nCreate a visualization that explores the distribution of adults who smoke among each state. Describe this distribution.\n\n## Exercise 4\n\nCreate a visualization that explores the relationship between flu vaccination rate and childhood vaccination rate. What relationship(s) do you see?\n\n## Exercise 5\n\nCreate a visualization that explores the relationship between death rate per 100,000 due to cardiovascular causes and the percentage of obese residents in a state. Color-code your plot based on HDI category. What relationship(s) do you see?\n\n## Exercise 6\n\nCreate a meaningful visualization of your choice. Comment on the relationship(s) you see.\n\n# From .html to .pdf\n\nAs you’ve seen previously, we can **knit** the template into an .html file that can be opened by any web browser. To export it as a .pdf, open the file in your web browser and then print to or save as a .pdf document. Your TA will show you how if you need help! (There is a way to directly knit to a .pdf file, but it’s quite a bit more involved.)\n\nImportant: You must turn in a .pdf file corresponding to the R Markdown template to Canvas in order to receive credit for the labs and homework assignments.",
    "supporting": [
      "lab-1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}